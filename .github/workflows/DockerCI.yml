name: Ubuntu Production Container Test

on: 

  pull_request:
    branches: 
      - master

jobs:

  BuildContainer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build Container
      run: docker build -f "dotnet3.Dockerfile" -t "${{secrets.dockerHubUsername}}/${{secrets.dockerHubContainerName}}:ubuntu" .

    - name: Push to Docker Hub
      run: |
        echo ${{secrets.dockerHubPassword}} | docker login -u ${{secrets.dockerHubUsername}} --password-stdin
        docker push "${{secrets.dockerHubUsername}}/${{secrets.dockerHubContainerName}}:ubuntu"
        docker logout

    - name: Archive Scripts For Later Use
      uses: actions/upload-artifact@v1
      with:
        name: scripts
        path: scripts

  DeployContainers:
    runs-on: ubuntu-latest
    needs: BuildContainer
    env:
      digitalOceanIP: ${{secrets.digitalOceanIP}}
      dockerHubUsername: ${{secrets.dockerHubUsername}}
      dockerHubContainerName: ${{secrets.dockerHubContainerName}}    
      commitSHA: ${{github.event.pull_request.head.sha}}

    steps:
    - name: Get Scripts From Archive
      uses: actions/download-artifact@v1
      with:
        name: scripts
    
    - name: Prepare Public Facing Container Environment
      shell: bash
      run: |
        chmod -R a+x scripts
        echo "${{secrets.digitalOceanPrivateKey}}" >> key.txt
        chmod 600 key.txt
        echo "ProductionDocker ansible_user=root ansible_ssh_host=${{secrets.digitalOceanIP}} domain=${{secrets.domain}} containerName=${{secrets.dockerHubContainerName}} containerImage="${{secrets.dockerHubUsername}}/${{secrets.dockerHubContainerName}}:ubuntu"  ansible_ssh_private_key_file=key.txt ansible_ssh_extra_args='-o StrictHostKeyChecking=no'" > inventory

    - name: Deploy Public Facing Container
      run: ansible-playbook -i inventory scripts/deploy.yml
  CheckContainers:
    runs-on: ubuntu-latest
    needs: [BuildContainer, DeployContainers]
    steps:
    - name: Check Home Page of All Ubuntu Containers
      run: ansible-playbook -i inventory scripts/checkpage.yml
      
    - name: Delete Private Key Text File
      run: rm key.txt
